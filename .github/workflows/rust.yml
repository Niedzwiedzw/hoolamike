name: build and release
on:
  push:
    # tags:
    #   - v*

env:
  RUST_BACKTRACE: 1

jobs:
  release:
    permissions:
      contents: write  # Required to create releases
    name: Release - ${{ matrix.platform.os-name }} with rust ${{ matrix.toolchain }}
    strategy:
      matrix:
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
          - os-name: macOS-x86_64
            runs-on: macos-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # LIBARCHIVE Installation
      # Linux
      - name: Install libarchive (Linux)
        if: matrix.platform.os-name == 'Linux-x86_64'
        run: sudo apt-get update --yes && sudo apt-get install --yes pkg-config libssl-dev libarchive-dev

      # Windows
      - name: Setup vcpkg (Windows)
        if: matrix.platform.os-name == 'Windows-x86_64'
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg.exe install libarchive:x64-windows
          echo "VCPKG_ROOT=$env:GITHUB_WORKSPACE\vcpkg" >> $env:GITHUB_ENV
        shell: pwsh 
      - name: Install libarchive (Windows)
        if: matrix.platform.os-name == 'Windows-x86_64'
        run: |
          choco install libarchive
        shell: pwsh

      # MacOS
      - name: Install libarchive (macOS)
        if: matrix.platform.os-name == 'macOS-x86_64'
        run: brew install libarchive

      # Cache
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: ${{ matrix.platform.target }}

      - name: Build binary
        env:
          VCPKG_ROOT: ${{ env.VCPKG_ROOT }}  # For Windows
          PKG_CONFIG_PATH: ${{ env.PKG_CONFIG_PATH }}  # For macOS
        run: |
          if ($env:VCPKG_ROOT) {
            cargo build --locked --release --package hoolamike --target ${{ matrix.platform.target }} -Z build-std --features "vcpkg"
          } else {
            cargo build --locked --release --package hoolamike --target ${{ matrix.platform.target }}
          }
        shell: pwsh

      - name: Package artifacts
        run: |
          mkdir artifacts
          cp target/${{ matrix.platform.target }}/release/hoolamike* artifacts/
        shell: bash

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: false
          files: artifacts/hoolamike*
          body_path: CHANGELOG.md
