name: build and release
on:
  push:
    tags:
      - v*

env:
  RUST_BACKTRACE: 1

jobs:
  release:
    permissions:
      contents: write
    name: Release - ${{ matrix.platform.os-name }} with rust ${{ matrix.toolchain }}
    strategy:
      matrix:
        platform:
          - os-name: Linux-x86_64
            runs-on: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
          - os-name: Windows-x86_64
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
          - os-name: macOS-arm64
            runs-on: macos-14
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install libarchive (Linux)
        if: matrix.platform.os-name == 'Linux-x86_64'
        run: sudo apt-get update --yes && sudo apt-get install --yes pkg-config libssl-dev libarchive-dev

      - name: Cache vcpkg (Windows)
        if: matrix.platform.os-name == 'Windows-x86_64'
        uses: actions/cache@v3
        with:
          path: |
            vcpkg
            vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Setup vcpkg (Windows)
        if: matrix.platform.os-name == 'Windows-x86_64'
        run: |
          if (-Not (Test-Path vcpkg)) {
            git clone https://github.com/microsoft/vcpkg.git
            cd vcpkg
            .\bootstrap-vcpkg.bat
          } else {
            cd vcpkg
            git pull
          }
          .\vcpkg.exe install libarchive:x64-windows-static-md
          echo "VCPKG_ROOT=$env:GITHUB_WORKSPACE\vcpkg" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Install libarchive (macOS ARM)
        if: matrix.platform.os-name == 'macOS-arm64'
        run: |
          brew update
          brew install libarchive pkg-config || brew upgrade libarchive pkg-config
          echo "PKG_CONFIG_PATH=/opt/homebrew/opt/libarchive/lib/pkgconfig" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          targets: ${{ matrix.platform.target }}
          components: rust-src  # Add rust-src component for -Z build-std


      - name: Build binary
        env:
          VCPKG_ROOT: ${{ env.VCPKG_ROOT }}
          PKG_CONFIG_PATH: ${{ env.PKG_CONFIG_PATH }}
          PKG_CONFIG_ALLOW_CROSS: ${{ env.PKG_CONFIG_ALLOW_CROSS }}
          CARGO_PROFILE_RELEASE_BUILD_OVERRIDE_DEBUG: true
          RUST_BACKTRACE: full
          CFLAGS: ${{ matrix.platform.os-name == 'Linux-x86_64' && '-msse2' || '' }}
        run: |
          if ($env:VCPKG_ROOT) {
            cargo build --locked --release --package hoolamike --target ${{ matrix.platform.target }} -Z build-std --verbose
          } else {
            cargo build --locked --release --package hoolamike --target ${{ matrix.platform.target }} --verbose
          }
        shell: pwsh

      - name: Package artifacts
        run: |
          # Create a target-specific directory
          mkdir -p artifacts/${{ matrix.platform.target }}
          # Copy all output files (e.g., hoolamike, hoolamike.exe, etc.)
          cp target/${{ matrix.platform.target }}/release/hoolamike* artifacts/${{ matrix.platform.target }}/
          # Archive based on platform
          if [ "${{ matrix.platform.os-name }}" = "Windows-x86_64" ]; then
            7z a artifacts/hoolamike-${{ matrix.platform.target }}.zip ./artifacts/${{ matrix.platform.target }}/*
          else
            tar -czvf artifacts/hoolamike-${{ matrix.platform.target }}.tar.gz -C artifacts/${{ matrix.platform.target }} .
          fi
        shell: bash

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          draft: true
          files: |
            artifacts/hoolamike-*.zip
            artifacts/hoolamike-*.tar.gz
          body_path: CHANGELOG.md
